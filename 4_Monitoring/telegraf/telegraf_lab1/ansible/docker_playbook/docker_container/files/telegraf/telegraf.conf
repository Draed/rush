[global_tags]
  user = "${USER}"

[agent]
  ## Default data collection interval for all inputs
  interval = "5s"
  ## Log at debug level.
  debug = true
  ## Log only error level messages.
  quiet = false
  ## Log target controls the destination for logs and can be one of "file",
  ## "stderr" or, on Windows, "eventlog".  When set to "file", the output file
  ## is determined by the "logfile" setting.
  logtarget = "file"
  ## Name of the file to be logged to when using the "file" logtarget.  If set to
  ## the empty string then logs are written to stderr.
  logfile = "/var/log/telegraf.log"


[[inputs.docker]]
    ## Docker Endpoint
    ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
    ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
    
    ## this is endpoint for docker rootfull
    #endpoint = "unix:///var/run/docker.sock"

    ## This is endpoint for docker rootless
    endpoint = "unix://${XDG_RUNTIME_DIR}/docker.sock"

    ## Only collect metrics for these containers, collect all if empty 
    container_names = [] 
    
    ## Set to true to collect Swarm metrics(desired_replicas, running_replicas)
    gather_services = false

    ## Timeout for docker list, info, and stats commands 
    timeout = "5s" 

[[outputs.influxdb]]
    ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
    ## Multiple urls can be specified as part of the same cluster,
    ## this means that only ONE of the urls will be written to each interval.
    # urls = ["udp://localhost:8089"] # UDP endpoint example
    # urls = ["http://127.0.0.1:8086", "${INFLUX_URL}"]
    urls = ["${INFLUX_URL}"]
    
    ## HTTP Basic Auth
    # username = "telegraf"
    # password = "${INFLUX_PASSWORD}"

    ## Optional TLS Config for use on HTTP connections.
    # tls_ca = "/etc/telegraf/ca.pem"
    # tls_cert = "/etc/telegraf/cert.pem"
    # tls_key = "/etc/telegraf/key.pem"
    ## Use TLS but skip chain & host verification
    # insecure_skip_verify = false

    ## The target database for metrics (telegraf will create it if not exists).
    database = "${DATABASE}"

    ## If true, no CREATE DATABASE queries will be sent.  Set to true when using
    ## Telegraf with a user without permissions to create databases or when the
    ## database already exists.
    skip_database_creation = ${INFLUX_SKIP_DATABASE_CREATION}

    ## Name of existing retention policy to write to.  Empty string writes to
    ## the default retention policy.  Only takes effect when using HTTP.
    retention_policy = ""

    ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
    write_consistency = "any"

    ## Write timeout (for the InfluxDB client), formatted as a string.
    ## If not provided, will default to 5s. 0s means no timeout (not recommended).
    timeout = "5s"

#  
# ============ For testing purpose ! ============
# comment after testing
# 
[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  files = ["stdout", "/tmp/metrics.out"]

  ## Data format to output.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
  data_format = "json"

  ## The resolution to use for the metric timestamp.  Must be a duration string
  ## such as "1ns", "1us", "1ms", "10ms", "1s".  Durations are truncated to
  ## the power of 10 less than the specified units.
  json_timestamp_units = "1s"
